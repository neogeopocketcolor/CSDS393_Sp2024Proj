<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">


    <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="idcard" jdbcType="VARCHAR" property="idcard"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="hobby" jdbcType="VARCHAR" property="hobby"/>

        <result column="role" jdbcType="INTEGER" property="role"/>
        <result column="created_time" jdbcType="VARCHAR" property="createdTime"/>
    </resultMap>


    <!--删除用户-->
    <delete id="deleteUserByAccount" parameterType="java.lang.String">
        delete
        from user
        where account = #{account,jdbcType=VARCHAR}
    </delete>


    <insert id="insert" parameterType="com.example.demo.entity.User">

        insert into user (account,`password`,`created_time`)
        values (#{account,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{createdTime,jdbcType=VARCHAR})
    </insert>


    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">

        update user set
        <if test="nickName!= null">
            nick_name = #{nickName,jdbcType=VARCHAR},
        </if>
        <if test="sex!= null">
            sex = #{sex,jdbcType=INTEGER},
        </if>

        <if test="password!= null">
            password = #{password,jdbcType=VARCHAR},
        </if>
        <if test="phone!= null">
            phone = #{phone,jdbcType=VARCHAR},
        </if>
        <if test="birthday!= null">
            birthday = #{birthday,jdbcType=VARCHAR},
        </if>
        <if test="address!= null">
            address = #{address,jdbcType=VARCHAR},
        </if>
        <if test="idcard!= null">
            idcard = #{idcard,jdbcType=VARCHAR},
        </if>
        <if test="avatar!= null">
            avatar = #{avatar,jdbcType=VARCHAR},
        </if>
        <if test="hobby!= null">
            hobby = #{hobby,jdbcType=VARCHAR},
        </if>




        account = #{account,jdbcType=VARCHAR}
        where account = #{account,jdbcType=VARCHAR}

    </update>


    <select id="getUserByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">

        select *
        from user
        where account = #{account}
    </select>
    <select id="getUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select *
        from user
        where id = #{id}
    </select>


    <select id="getUserList" parameterType="com.example.demo.entity.User" resultMap="BaseResultMap">

        select *
        from user limit #{page},#{pageSize}
    </select>



    <select id="getCount" resultType="java.lang.Integer">

        select count(*)
        from user
    </select>


</mapper>